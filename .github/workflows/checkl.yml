name: Check

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    outputs:
      found: ${{ steps.search-version.outputs.found }}
      version: ${{ steps.get-version.outputs.version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get upstream version
        id: get-version
        run: echo "::set-output name=version::$(curl -s GET https://api.github.com/repos/hrkfdn/ncspot/tags | jq -r '.[].name' | head -n1 | cut -c 2-)"

      - name: Find version on PKGBUILD
        id: search-version
        run: |
          if grep -q "${{ steps.get-version.outputs.version }}" PKGBUILD
          then
            echo "::set-output name=found::true"
          else
            echo "::set-output name=found::false"
          fi

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: check
    if: needs.check.outputs.found == 'false'
    container: archlinux:base-devel
    outputs:
      version: ${{ needs.check.outputs.version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: 'hrkfdn/ncspot'
          ref: 'v${{ needs.check.outputs.version }}'

      - name: Install dependecies
        run: |
          pacman -Syu --needed --noconfirm rustup cargo git alsa-lib python pkgconf openssl libpulse libxcb ncurses dbus
          
      - name: Set up rustup
        run: |
          rustup set profile minimal
          rustup default stable
          
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          
      - name: Run build
        run: |
          cargo fetch --locked
          cargo build --release --locked
          cargo test --release --locked
          
      - uses: actions/upload-artifact@v2
        with:
          name: ncspot-v${{ needs.check.outputs.version }}
          path: target/release/ncspot
          
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    outputs:
      version: ${{ needs.build.build.version }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - uses: actions/download-artifact@v2
        with:
          name: ncspot-v${{ needs.build.outputs.version }}

      - name: Packaging assets
        run: |
          tar czvf ncspot-v${{ needs.build.outputs.version }}-linux-x86_64.tar.gz ncspot
          shasum -a 512 ncspot-v${{ needs.build.outputs.version }}-linux-x86_64.tar.gz > ncspot-v${{ needs.build.outputs.version }}-linux-x86_64.sha512
          
      - name: Releasing assets
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ needs.build.outputs.version }}
          tag_name: v${{ needs.build.outputs.version }}
          files: ncspot-*

  push:
    name: Push
    needs: release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Update PKGBUILD
        uses: datakrama/archlinux-package-action@v1
        with:
          pkgver: ${{ needs.release.outputs.version }}
          pkgrel: 1
          updpkgsums: true
          srcinfo: true
          flags: ""

      - name: Commit changes
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add PKGBUILD .SRCINFO
          git commit -m "chore: bump to v${{ needs.release.outputs.version }}"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Trigger CI workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: CI
          token: ${{ secrets.PERSONAL_TOKEN }}
          inputs: '{ "version": "${{ needs.release.outputs.version }}" }'
